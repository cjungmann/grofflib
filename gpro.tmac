.\" -*- mode:nroff -*-
.de gpro_remove_registers
.  rr param_indent oldHY oldAD line_count max_line_len
.  rm type name
.  rm enclosure left right separator end_glyph
.  rm div_args div_types div_names
..
.de gpro_start
.  ds type \\$1
.  ds name \\$2
.\" Determine enclosing glyphs
.  ie \\n[.$]>2 .ds enclosure \\$3
.  el .ds enclosure ()
.  ds left \\*[enclosure]
.  substring left 0 0
.  ds right \\*[enclosure]
.  substring right 1 1
.\" Determine member/argument separator
.  ie \\n[.$]>3 .ds separator \\$4
.  el .ds separator ,
.\" Print type and name
.  nop \\fB\\*[type]\\fP \\fI\\*[name]\\fP \\*[left] \\c
.\" Save horizontal position as indent value
.  nr param_indent \\n[.i]+\\n[.k]
.  br
.  sp -1
.  in \\n[param_indent]u
.  nr oldHY \\n[.hy]
.  nr oldAD \\n[.j]
.  hy 0
.  ad l
.\" setup accumulator registers/diversions
.  nr line_count 0
.  nr max_line_len 0
.  di div_names
.  di
.  di div_types
.  di
.  di div_args
.  di
..
.de gpro_arg
.  ie \\n[.$]>2 .ds end_glyph \\ 
.  el .ds end_glyph \\*[separator]
.  ds type \\$1
.  ds name \\$2
'\" Collect data for stacked
'\" NOTE: the '\!' in diversions preserve the newline
'\" push the environment to prevent diversion partial lines:
.  ev @inarg
.  da div_types
\\! \\fB\\*[type]\\fP
.  br
.  di
.  da div_names
\\! \\fI\\*[name]\\fP\\*[end_glyph]
.  br
.  di
'\" Diversion for running
.  da div_args
\\fB\\*[type]\\fP\ \\fI\\*[name]\\fP\\*[end_glyph]
.  br
.  di
.  ev
'\" Update cumulative values:
.  nr line_count +1
.  nr cur_line_len \\w'\\$1 '
.  if \\n[cur_line_len]>\\n[max_line_len] .nr max_line_len \\n[cur_line_len]
..
.de gpro_end
.  div_args
\\*[right];
.  br
.  in   \" param_indent (from gpro_start)
.  gpro_remove_registers
..
.de gpro_end_stacked
.\" print in columns, types then names
.  div_types
.  sp -\\n[line_count]
.  in +\\n[max_line_len]u
.  div_names
.  in   \" max_line_len
.  br
.  nop \ \\*[right];
.  in   \" param_indent (from gpro_start)
.  gpro_remove_registers
..
